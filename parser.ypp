%{
#include <iostream>
#include "hw3_output.hpp"
extern int yylex();
extern int yylineno;
int yyerror(const char *s);
%}

%token INT BYTE B BOOL TRUE FALSE IF RETURN WHILE BREAK CONTINUE SC ID NUM STRING

%right ASSIGN 
%left OR
%left AND
%left ISEQUAL
%left RELOP
%left ADD SUB
%left MULTIPLY DIVIDE
%right ELSE
%right NOT
%left LPAREN RPAREN LBRACE RBRACE 

%%
Program: Statements                                                     
Statements: Statement                                                  
            | Statements Statement                                      
                                                                        
Statement: LBRACE Statements RBRACE                                     
            | Type ID SC                                                
            | Type ID ASSIGN Exp SC                                     
            | ID ASSIGN Exp SC                                          
            | Call SC                                                   
            | RETURN SC                                                 
            | IF LPAREN Exp RPAREN Statement %prec IF                   
            | IF LPAREN Exp RPAREN Statement ELSE Statement             
            | WHILE LPAREN Exp RPAREN Statement                         
            | BREAK SC                                                  
            | CONTINUE SC                                              

Call:   ID LPAREN Exp RPAREN                                            

Type:   INT                                                            
        | BYTE                                                          
        | BOOL                                                         

Exp:    LPAREN Exp RPAREN                                               
        | Exp ADD Exp                                                   
        | Exp SUB Exp                                                   
        | Exp DIVIDE Exp                                                
        | Exp MULTIPLY Exp                                              
        | ID                                                            
        | Call                                                         
        | NUM                                                          
        | NUM B                                                        
        | STRING                                                      
        | TRUE                                                         
        | FALSE                                                      
        | NOT Exp                                                      
        | Exp AND Exp                                                   
        | Exp OR Exp                                                    
        | Exp ISEQUAL Exp                                           
        | Exp RELOP Exp                                               
        | LPAREN Type RPAREN Exp                                       

%%
int yyerror(const char *s) {
    output::errorSyn(yylineno);
    exit(0);}

int main() {
    return yyparse();
}

